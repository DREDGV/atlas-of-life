// js/state.js
import { saveState } from "./storage.js";
import { 
  initHierarchyFields,
  setParentChild,
  removeParentChild,
  getParentObject,
  getChildObjects,
  validateHierarchy,
  isObjectLocked,
  setObjectLock,
  canMoveObject,
  canChangeHierarchy
} from "./hierarchy/index.js";
export const state = {
  view:'map',
  showLinks:true, showAging:true, showGlow:true,
  activeDomain:null,
  filterTag:null,
  wipLimit:3,
  settings: {
    layoutMode: 'auto',
    wipTodayLimit: 5,
    enableHierarchyV2: false, // –§–ª–∞–≥ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–µ—Ä–∞—Ä—Ö–∏–∏
    hotkeys: {
      newTask: 'ctrl+n',
      newProject: 'ctrl+shift+n', 
      newDomain: 'ctrl+shift+d',
      search: 'ctrl+f',
      closeInspector: 'escape',
      statusPlan: '1',
      statusToday: '2', 
      statusDoing: '3',
      statusDone: '4',
      fitAll: 'ctrl+0',
      fitDomain: 'ctrl+1',
      fitProject: 'ctrl+2'
    }
  },
  domains:[],
  projects:[],
  tasks:[],
  ideas:[],
  notes:[],
  maxEdges:300
};

export const now = Date.now();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∫–ª—é—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∏–µ—Ä–∞—Ä—Ö–∏–∏ v2
export function isHierarchyV2Enabled() {
  return state.settings.enableHierarchyV2 === true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∏–µ—Ä–∞—Ä—Ö–∏–∏ v2
export function setHierarchyV2Enabled(enabled) {
  state.settings.enableHierarchyV2 = enabled;
  console.log(`üîÑ –°–∏—Å—Ç–µ–º–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏ v2: ${enabled ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}`);
}
export const days = d => now - d*24*3600*1000;

export function initDemoData(){
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö (—É–±—Ä–∞–Ω–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)
  console.log("Initializing demo data...");
  
  state.domains = [
    {id:'d1', title:'–î–æ–º', color:'var(--home)', createdAt:days(30), updatedAt:days(1)},
    {id:'d2', title:'–î–∞—á–∞', color:'var(--dacha)', createdAt:days(45), updatedAt:days(2)},
    {id:'d3', title:'–†–∞–±–æ—Ç–∞', color:'#3b82f6', createdAt:days(20), updatedAt:days(0)}
  ];
  state.projects = [
    {id:'p1', domainId:'d1', title:'–î–æ–º–∞—à–Ω–∏–µ –¥–µ–ª–∞', tags:['–¥–æ–º'], priority:2, color:'#ff6b6b', createdAt:days(20), updatedAt:days(1)},
    {id:'p2', domainId:'d2', title:'–î–∞—á–Ω—ã–µ –ø–ª–∞–Ω—ã', tags:['–¥–æ–º','–¥–∞—á–∞'], priority:2, color:'#4ecdc4', createdAt:days(25), updatedAt:days(10)},
    {id:'p3', domainId:'d2', title:'–°–∞–¥ –∏ –æ–≥–æ—Ä–æ–¥', tags:['–¥–∞—á–∞'], priority:1, color:'#45b7d1', createdAt:days(18), updatedAt:days(3)},
    {id:'p4', domainId:'d3', title:'–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞', tags:['—Ä–∞–±–æ—Ç–∞','–∫–æ–¥'], priority:1, color:'#8b5cf6', createdAt:days(15), updatedAt:days(0)},
    {id:'p5', domainId:'d3', title:'–í—Å—Ç—Ä–µ—á–∏', tags:['—Ä–∞–±–æ—Ç–∞','–≤—Å—Ç—Ä–µ—á–∏'], priority:2, color:'#06b6d4', createdAt:days(10), updatedAt:days(0)}
  ];
  state.tasks = [
    // –î–æ–º–µ–Ω "–î–æ–º" - –º–Ω–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á (pressure)
    {id:'t1', projectId:'p1', title:'–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã', tags:['–¥–æ–º','–ø–æ–∫—É–ø–∫–∏'], status:'today', estimateMin:5, priority:1, updatedAt:days(1), createdAt:days(5)},
    {id:'t2', projectId:'p1', title:'–£–±–æ—Ä–∫–∞ –Ω–∞ –∫—É—Ö–Ω–µ', tags:['–¥–æ–º'], status:'today', estimateMin:90, priority:1, updatedAt:days(0), createdAt:days(2)},
    {id:'t3', projectId:'p1', title:'–ü–æ—á–∏–Ω–∏—Ç—å –∫—Ä–∞–Ω', tags:['–¥–æ–º','—Ä–µ–º–æ–Ω—Ç'], status:'doing', estimateMin:120, priority:1, updatedAt:days(1), createdAt:days(3)},
    {id:'t4', projectId:'p1', title:'–ü–æ–≤–µ—Å–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω—É', tags:['–¥–æ–º','—Ä–µ–º–æ–Ω—Ç'], status:'backlog', estimateMin:30, priority:2, updatedAt:days(2), createdAt:days(4)},
    {id:'t5', projectId:'p1', title:'–ù–∞—Å—Ç—Ä–æ–∏—Ç—å Wi-Fi', tags:['–¥–æ–º','—Ç–µ—Ö–Ω–∏–∫–∞'], status:'backlog', estimateMin:60, priority:2, updatedAt:days(1), createdAt:days(5)},
    {id:'t6', projectId:'p1', title:'–ü–æ–º—ã—Ç—å –æ–∫–Ω–∞', tags:['–¥–æ–º','—É–±–æ—Ä–∫–∞'], status:'backlog', estimateMin:180, priority:2, updatedAt:days(0), createdAt:days(6)},
    
    // –î–æ–º–µ–Ω "–î–∞—á–∞" - –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ (crisis)
    {id:'t7', projectId:'p2', title:'–°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≥—Ä—è–¥–∫–∏', tags:['–¥–∞—á–∞','—Å–∞–¥'], status:'backlog', estimateMin:60, priority:3, updatedAt:days(10), createdAt:days(20), due: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString()},
    {id:'t8', projectId:'p2', title:'–ö—É–ø–∏—Ç—å —Å–µ–º–µ–Ω–∞', tags:['–ø–æ–∫—É–ø–∫–∏','–¥–∞—á–∞'], status:'backlog', estimateMin:20, priority:2, updatedAt:days(15), createdAt:days(22), due: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString()},
    {id:'t9', projectId:'p3', title:'–ü–æ–ª–∏—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è', tags:['–¥–∞—á–∞','—Å–∞–¥'], status:'doing', estimateMin:30, priority:2, updatedAt:days(3), createdAt:days(9)},
    {id:'t10', projectId:'p3', title:'–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª–∏–≤', tags:['–¥–∞—á–∞','—Å–∞–¥','—Ç–µ—Ö–Ω–∏–∫–∞'], status:'doing', estimateMin:45, priority:2, updatedAt:days(8), createdAt:days(14)},
    
    // === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–û–í–´–ï –ó–ê–î–ê–ß–ò –î–õ–Ø TODAY VIEW ===
    
    // –ó–∞–¥–∞—á–∏ —Å –¥–µ–¥–ª–∞–π–Ω–∞–º–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ "–° –≤—Ä–µ–º–µ–Ω–µ–º")
    {id:'t11', projectId:'p1', title:'–£—Ç—Ä–µ–Ω–Ω—è—è –≤—Å—Ç—Ä–µ—á–∞', tags:['–¥–æ–º','–≤—Å—Ç—Ä–µ—á–∞'], status:'today', estimateMin:60, priority:1, updatedAt:days(0), createdAt:days(1), scheduledFor: new Date(Date.now() + 30 * 60 * 1000).toISOString()},
    {id:'t12', projectId:'p1', title:'–û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤', tags:['–¥–æ–º','–æ–±–µ–¥'], status:'today', estimateMin:60, priority:4, updatedAt:days(0), createdAt:days(1), scheduledFor: new Date(Date.now() + 3 * 60 * 60 * 1000).toISOString()},
    {id:'t13', projectId:'p1', title:'–í–µ—á–µ—Ä–Ω–∏–π –∑–≤–æ–Ω–æ–∫', tags:['–¥–æ–º','–∑–≤–æ–Ω–æ–∫'], status:'today', estimateMin:30, priority:3, updatedAt:days(0), createdAt:days(1), scheduledFor: new Date(Date.now() + 6 * 60 * 60 * 1000).toISOString()},
    
    // –ó–∞–¥–∞—á–∏ –±–µ–∑ –¥–µ–¥–ª–∞–π–Ω–æ–≤ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ "–ë–µ–∑ –≤—Ä–µ–º–µ–Ω–∏")
    {id:'t14', projectId:'p1', title:'–ü–æ–º—ã—Ç—å –ø–æ—Å—É–¥—É', tags:['–¥–æ–º','—É–±–æ—Ä–∫–∞'], status:'today', estimateMin:20, priority:4, updatedAt:days(0), createdAt:days(1)},
    {id:'t15', projectId:'p1', title:'–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—á—Ç—É', tags:['–¥–æ–º','–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è'], status:'today', estimateMin:15, priority:3, updatedAt:days(0), createdAt:days(1)},
    {id:'t16', projectId:'p1', title:'–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É', tags:['–¥–æ–º','–∑–¥–æ—Ä–æ–≤—å–µ'], status:'today', estimateMin:10, priority:2, updatedAt:days(0), createdAt:days(1)},
    
    // –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ "–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ")
    {id:'t17', projectId:'p1', title:'–°–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É', tags:['–¥–æ–º','—Å–ø–æ—Ä—Ç'], status:'done', estimateMin:30, priority:4, updatedAt:days(0), createdAt:days(2), completedAt: Date.now() - 2 * 60 * 60 * 1000},
    {id:'t18', projectId:'p1', title:'–ü—Ä–æ—á–∏—Ç–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏', tags:['–¥–æ–º','–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'], status:'done', estimateMin:20, priority:4, updatedAt:days(0), createdAt:days(2), completedAt: Date.now() - 4 * 60 * 60 * 1000},
    {id:'t19', projectId:'p1', title:'–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—á–µ—Ç–∞', tags:['–¥–æ–º','—Ñ–∏–Ω–∞–Ω—Å—ã'], status:'done', estimateMin:15, priority:3, updatedAt:days(0), createdAt:days(2), completedAt: Date.now() - 6 * 60 * 60 * 1000},
    
    // –ó–∞–¥–∞—á–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞ "–†–∞–±–æ—Ç–∞" (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤)
    {id:'t20', projectId:'p4', title:'–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥–∏', tags:['—Ä–∞–±–æ—Ç–∞','–∫–æ–¥','–±–∞–≥–∏'], status:'today', estimateMin:120, priority:1, updatedAt:days(0), createdAt:days(1)},
    {id:'t21', projectId:'p4', title:'–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç—ã', tags:['—Ä–∞–±–æ—Ç–∞','–∫–æ–¥','—Ç–µ—Å—Ç—ã'], status:'today', estimateMin:90, priority:2, updatedAt:days(0), createdAt:days(1)},
    {id:'t22', projectId:'p4', title:'–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥', tags:['—Ä–∞–±–æ—Ç–∞','–∫–æ–¥','–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'], status:'today', estimateMin:60, priority:2, updatedAt:days(0), createdAt:days(1)},
    {id:'t23', projectId:'p4', title:'–û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é', tags:['—Ä–∞–±–æ—Ç–∞','–∫–æ–¥','–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è'], status:'today', estimateMin:45, priority:3, updatedAt:days(0), createdAt:days(1)},
    {id:'t24', projectId:'p4', title:'Code review', tags:['—Ä–∞–±–æ—Ç–∞','–∫–æ–¥','review'], status:'today', estimateMin:30, priority:2, updatedAt:days(0), createdAt:days(1)},
    
    // –í—Å—Ç—Ä–µ—á–∏ –∏ –ø–ª–∞–Ω—ã
    {id:'t25', projectId:'p5', title:'–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–∏–Ω—Ç–∞', tags:['—Ä–∞–±–æ—Ç–∞','–≤—Å—Ç—Ä–µ—á–∏','–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'], status:'today', estimateMin:90, priority:1, updatedAt:days(0), createdAt:days(1), scheduledFor: new Date(Date.now() + 1 * 60 * 60 * 1000).toISOString()},
    {id:'t26', projectId:'p5', title:'–°—Ç–µ–Ω–¥–∞–ø –∫–æ–º–∞–Ω–¥—ã', tags:['—Ä–∞–±–æ—Ç–∞','–≤—Å—Ç—Ä–µ—á–∏','—Å—Ç–µ–Ω–¥–∞–ø'], status:'today', estimateMin:30, priority:2, updatedAt:days(0), createdAt:days(1), scheduledFor: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString()},
    {id:'t27', projectId:'p5', title:'–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã', tags:['—Ä–∞–±–æ—Ç–∞','–≤—Å—Ç—Ä–µ—á–∏','–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞'], status:'today', estimateMin:60, priority:2, updatedAt:days(0), createdAt:days(1)},
    
    // –ó–∞–¥–∞—á–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    {id:'t28', projectId:'p1', title:'–ö–†–ò–¢–ò–ß–ù–û: –°—Ä–æ—á–Ω—ã–π —Ä–µ–º–æ–Ω—Ç', tags:['–¥–æ–º','—Ä–µ–º–æ–Ω—Ç','–∫—Ä–∏—Ç–∏—á–Ω–æ'], status:'today', estimateMin:180, priority:1, updatedAt:days(0), createdAt:days(0)},
    {id:'t29', projectId:'p1', title:'–í–∞–∂–Ω–æ: –û–ø–ª–∞—Ç–∏—Ç—å —Å—á–µ—Ç–∞', tags:['–¥–æ–º','—Ñ–∏–Ω–∞–Ω—Å—ã','–≤–∞–∂–Ω–æ'], status:'today', estimateMin:30, priority:2, updatedAt:days(0), createdAt:days(0)},
    {id:'t30', projectId:'p1', title:'–û–±—ã—á–Ω–æ: –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã', tags:['–¥–æ–º','—É—Ö–æ–¥','–æ–±—ã—á–Ω–æ'], status:'today', estimateMin:15, priority:3, updatedAt:days(0), createdAt:days(0)},
    {id:'t31', projectId:'p1', title:'–ù–µ–≤–∞–∂–Ω–æ: –†–∞–∑–æ–±—Ä–∞—Ç—å —à–∫–∞—Ñ', tags:['–¥–æ–º','—É–±–æ—Ä–∫–∞','–Ω–µ–≤–∞–∂–Ω–æ'], status:'today', estimateMin:120, priority:4, updatedAt:days(0), createdAt:days(0)},
    
    // –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏)
    {id:'t32', projectId:'p2', title:'–ü–û–ó–î–ù–û: –ü–æ—Å–∞–¥–∏—Ç—å —Ä–∞—Å—Å–∞–¥—É', tags:['–¥–∞—á–∞','—Å–∞–¥','–ø–æ–∑–¥–Ω–æ'], status:'backlog', estimateMin:90, priority:2, updatedAt:days(0), createdAt:days(5), due: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()},
    {id:'t33', projectId:'p2', title:'–ü–û–ó–î–ù–û: –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ç–µ–ø–ª–∏—Ü—É', tags:['–¥–∞—á–∞','—Å–∞–¥','–ø–æ–∑–¥–Ω–æ'], status:'backlog', estimateMin:120, priority:1, updatedAt:days(0), createdAt:days(4), due: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString()},
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è —Ä–æ—Å—Ç–∞ (growth)
    {id:'t34', projectId:'p4', title:'–ò–∑—É—á–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é', tags:['—Ä–∞–±–æ—Ç–∞','–æ–±—É—á–µ–Ω–∏–µ','—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è'], status:'today', estimateMin:180, priority:3, updatedAt:days(0), createdAt:days(0)},
    {id:'t35', projectId:'p4', title:'–ù–∞–ø–∏—Å–∞—Ç—å —Å—Ç–∞—Ç—å—é –≤ –±–ª–æ–≥', tags:['—Ä–∞–±–æ—Ç–∞','–∫–æ–Ω—Ç–µ–Ω—Ç','—Å—Ç–∞—Ç—å—è'], status:'today', estimateMin:120, priority:3, updatedAt:days(0), createdAt:days(0)},
    {id:'t36', projectId:'p4', title:'–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç', tags:['—Ä–∞–±–æ—Ç–∞','–ø—Ä–æ–µ–∫—Ç','—Å–æ–∑–¥–∞–Ω–∏–µ'], status:'today', estimateMin:240, priority:3, updatedAt:days(0), createdAt:days(0)},
    {id:'t37', projectId:'p4', title:'–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏', tags:['—Ä–∞–±–æ—Ç–∞','—Ñ—É–Ω–∫—Ü–∏–∏','—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞'], status:'today', estimateMin:150, priority:3, updatedAt:days(0), createdAt:days(0)},
    {id:'t38', projectId:'p4', title:'–£–ª—É—á—à–∏—Ç—å UX', tags:['—Ä–∞–±–æ—Ç–∞','ux','—É–ª—É—á—à–µ–Ω–∏–µ'], status:'today', estimateMin:90, priority:3, updatedAt:days(0), createdAt:days(0)},
    {id:'t39', projectId:'p4', title:'–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', tags:['—Ä–∞–±–æ—Ç–∞','–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è','–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'], status:'today', estimateMin:120, priority:3, updatedAt:days(0), createdAt:days(0)}
  ];
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–¥–µ–∏ –∏ –∑–∞–º–µ—Ç–∫–∏
  state.ideas = [
    {id:'idea1', title:'–ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è', content:'–î–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –∏–¥–µ–π –ø—Ä—è–º–æ –Ω–∞ –∫–∞—Ä—Ç–µ', domainId:'d3', x: 200, y: 150, r: 35, color:'#ff6b6b', opacity: 0.4, createdAt:days(1), updatedAt:days(1)},
    {id:'idea2', title:'–£–ª—É—á—à–µ–Ω–∏–µ UI', content:'–°–¥–µ–ª–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ–ª–µ–µ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–º', domainId:'d3', x: -300, y: 100, r: 25, color:'#4ecdc4', opacity: 0.5, createdAt:days(2), updatedAt:days(2)},
    {id:'idea3', title:'–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è', content:'–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤', domainId:'d3', x: 100, y: -200, r: 40, color:'#45b7d1', opacity: 0.3, createdAt:days(3), updatedAt:days(3)}
  ];
  
  state.notes = [
    {id:'note1', title:'–í–∞–∂–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞', content:'–ù–µ –∑–∞–±—ã—Ç—å –ø—Ä–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Edge', domainId:'d3', x: 150, y: 300, r: 8, color:'#8b7355', opacity: 1.0, createdAt:days(1), updatedAt:days(1)},
    {id:'note2', title:'–ò–¥–µ—è –¥–ª—è –±—É–¥—É—â–µ–≥–æ', content:'–î–æ–±–∞–≤–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å –æ–±–ª–∞–∫–æ–º', domainId:'d3', x: -250, y: -150, r: 6, color:'#a0a0a0', opacity: 1.0, createdAt:days(2), updatedAt:days(2)},
    {id:'note3', title:'–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∑–∞–º–µ—Ç–∫–∞', content:'–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –±–æ–ª—å—à–∏—Ö –∫–∞—Ä—Ç', domainId:'d3', x: 400, y: -100, r: 10, color:'#6c757d', opacity: 1.0, createdAt:days(3), updatedAt:days(3)}
  ];
  
  console.log("After init:", { domains: state.domains.length, projects: state.projects.length, tasks: state.tasks.length, ideas: state.ideas.length, notes: state.notes.length });
  console.log("Tasks for –î–∞—á–∞ domain:", state.tasks.filter(t => {
    const project = state.projects.find(p => p.id === t.projectId);
    return project && project.domainId === 'd2';
  }));
  
  // –û—Ç–ª–∞–¥–∫–∞ –¥–ª—è Edge
  if (window.DEBUG_EDGE_TASKS) {
    console.log('initDemoData called, tasks created:', state.tasks.length, state.tasks);
  }
}

export const $ = s => document.querySelector(s);
export const $$ = s => [...document.querySelectorAll(s)];
export const byId = (arr,id) => arr.find(x=>x.id===id);

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
export function generateId() {
  return 'id_' + Math.random().toString(36).substr(2, 9) + '_' + Date.now();
}
export const project = id => byId(state.projects,id);
export const domainOf = prj => prj.domainId ? byId(state.domains, prj.domainId) : null;
export const tasksOfProject = pid => state.tasks.filter(t=>t.projectId===pid);
export const tasksIndependentOfDomain = (did) => state.tasks.filter(t=>!t.projectId && (t.domainId===did));
export const daysSince = ts => Math.floor((Date.now()-ts)/(24*3600*1000));
export const clamp = (v,a,b)=>Math.max(a,Math.min(b,v));

export function colorByAging(ts){
  const d = daysSince(ts||Date.now());
  if (d<=2) return '#34d399';
  if (d<=6) return '#a7f3d0';
  if (d<=14) return '#f59e0b';
  return '#ff6b6b';
}
export function sizeByImportance(item){
  const pr = (item.priority||2), impact = (item.impact||2);
  const base = 6 + (pr-1)*2 + (impact-2);
  return clamp(base,6,14);
}
export function statusPill(s){
  const map = {today:'–°–µ–≥–æ–¥–Ω—è', doing:'–í —Ä–∞–±–æ—Ç–µ', done:'–ì–æ—Ç–æ–≤–æ', backlog:'–ë—ç–∫–ª–æ–≥'};
  const cls = `status-pill ${s==='today'?'today': s==='doing'?'doing': s==='done'?'done':''}`;
  return `<span class="${cls}">${map[s]||s}</span>`;
}

// –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
export const PROJECT_COLOR_PRESETS = [
  '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',
  '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43',
  '#10ac84', '#ee5a24', '#0984e3', '#6c5ce7', '#a29bfe'
];

// –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
export function getRandomProjectColor() {
  return PROJECT_COLOR_PRESETS[Math.floor(Math.random() * PROJECT_COLOR_PRESETS.length)];
}

// –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
export function getProjectColor(project) {
  // –ï—Å–ª–∏ —É –ø—Ä–æ–µ–∫—Ç–∞ –µ—Å—Ç—å —Ü–≤–µ—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ - –µ–¥–∏–Ω—ã–π —Ü–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return project?.color || "#7b68ee"; // –ï–¥–∏–Ω—ã–π —Ü–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å —Ü–≤–µ—Ç–∞ (—Å–≤–µ—Ç–ª—ã–π/—Ç–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç)
export function getContrastColor(hexColor) {
  // –£–±–∏—Ä–∞–µ–º # –µ—Å–ª–∏ –µ—Å—Ç—å
  const color = hexColor.replace('#', '');
  
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB
  const r = parseInt(color.substr(0, 2), 16);
  const g = parseInt(color.substr(2, 2), 16);
  const b = parseInt(color.substr(4, 2), 16);
  
  // –í—ã—á–∏—Å–ª—è–µ–º —è—Ä–∫–æ—Å—Ç—å
  const brightness = (r * 299 + g * 587 + b * 114) / 1000;
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–≤–µ—Ç–ª—ã–π –∏–ª–∏ —Ç–µ–º–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
  return brightness > 128 ? '#000000' : '#ffffff';
}

// –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –¥–æ–º–µ–Ω–æ–≤ - —Ä–∞—Å—á–µ—Ç mood
export function getDomainMood(domainId) {
  const domain = state.domains.find(d => d.id === domainId);
  if (!domain) return 'balance';
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –¥–æ–º–µ–Ω–∞ (—á–µ—Ä–µ–∑ –ø—Ä–æ–µ–∫—Ç—ã)
  const domainProjects = state.projects.filter(p => p.domainId === domainId);
  const domainTasks = state.tasks.filter(t => 
    domainProjects.some(p => p.id === t.projectId) || t.domainId === domainId
  );
  
  // Debug: calculating mood for domain
  
  if (domainTasks.length === 0) return 'balance';
  
  const now = Date.now();
  const sevenDaysAgo = now - (7 * 24 * 60 * 60 * 1000);
  const threeDaysAgo = now - (3 * 24 * 60 * 60 * 1000);
  
  // 1. Crisis: –µ—Å—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ >3 –¥–Ω–µ–π
  const overdueTasks = domainTasks.filter(t => {
    if (t.status === 'done') return false;
    if (!t.due) return false;
    const dueTime = new Date(t.due).getTime();
    return dueTime < threeDaysAgo;
  });
  
  console.log(`Overdue tasks for ${domain.title}:`, overdueTasks.length, overdueTasks.map(t => ({ title: t.title, due: t.due })));
  
  if (overdueTasks.length > 0) {
    console.log(`Domain ${domain.title} is in CRISIS due to overdue tasks`);
    return 'crisis';
  }
  
  // 2. Pressure: –º–Ω–æ–≥–æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö p1/p2 –∑–∞–¥–∞—á (—Å–Ω–∏–∂–∞–µ–º –ø–æ—Ä–æ–≥)
  const highPriorityTasks = domainTasks.filter(t => 
    t.status !== 'done' && (t.priority === 1 || t.priority === 2)
  );
  
  console.log(`High priority tasks for ${domain.title}:`, highPriorityTasks.length, highPriorityTasks.map(t => ({ title: t.title, priority: t.priority, status: t.status })));
  
  if (highPriorityTasks.length >= 2) { // –°–Ω–∏–∂–∞–µ–º —Å 5 –¥–æ 2
    console.log(`Domain ${domain.title} is under PRESSURE due to high priority tasks`);
    return 'pressure';
  }
  
  // 3. Growth: –∑–∞ 7 –¥–Ω–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–æ >3 –∑–∞–¥–∞—á (—Å–Ω–∏–∂–∞–µ–º –ø–æ—Ä–æ–≥)
  const recentTasks = domainTasks.filter(t => {
    const createdTime = new Date(t.createdAt).getTime();
    return createdTime > sevenDaysAgo;
  });
  
  console.log(`Recent tasks for ${domain.title}:`, recentTasks.length, recentTasks.map(t => ({ title: t.title, createdAt: t.createdAt })));
  
  if (recentTasks.length > 3) { // –°–Ω–∏–∂–∞–µ–º —Å 5 –¥–æ 3
    console.log(`Domain ${domain.title} is in GROWTH due to recent tasks`);
    return 'growth';
  }
  
  // 4. Balance: –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏
  console.log(`Domain ${domain.title} is in BALANCE`);
  return 'balance';
}

// –¶–≤–µ—Ç–∞ –¥–ª—è mood
export function getMoodColor(mood) {
  const moodColors = {
    crisis: '#ef4444',    // –ö—Ä–∞—Å–Ω—ã–π - –∫—Ä–∏–∑–∏—Å
    pressure: '#f59e0b',  // –û—Ä–∞–Ω–∂–µ–≤—ã–π - –¥–∞–≤–ª–µ–Ω–∏–µ
    growth: '#10b981',    // –ó–µ–ª–µ–Ω—ã–π - —Ä–æ—Å—Ç
    balance: '#3b82f6'    // –°–∏–Ω–∏–π - –±–∞–ª–∞–Ω—Å
  };
  return moodColors[mood] || moodColors.balance;
}

// –û–ø–∏—Å–∞–Ω–∏–µ mood –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
export function getMoodDescription(mood) {
  const descriptions = {
    crisis: '–ö—Ä–∏–∑–∏—Å: –µ—Å—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
    pressure: '–î–∞–≤–ª–µ–Ω–∏–µ: –º–Ω–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á',
    growth: '–†–æ—Å—Ç: –∞–∫—Ç–∏–≤–Ω–æ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏',
    balance: '–ë–∞–ª–∞–Ω—Å: —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ'
  };
  return descriptions[mood] || descriptions.balance;
}

// ===== –°–ò–°–¢–ï–ú–ê –ò–ï–†–ê–†–•–ò–ò –ò –°–í–Ø–ó–ï–ô =====

// –§—É–Ω–∫—Ü–∏—è initHierarchyFields –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ –º–æ–¥—É–ª—è hierarchy/index.js

// –ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–¥–∏—É—Å–∞ –ø–æ —Ç–∏–ø—É –æ–±—ä–µ–∫—Ç–∞
// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∏–∑ –º–æ–¥—É–ª—è hierarchy/index.js

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
export function getParentObject(obj) {
  if (!obj || !obj.parentId) return null;
  
  // –ò—â–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è –ø–æ —Ç–∏–ø—É –∏ ID
  const allObjects = [
    ...state.domains.map(d => ({...d, _type: 'domain'})),
    ...state.projects.map(p => ({...p, _type: 'project'})),
    ...state.tasks.map(t => ({...t, _type: 'task'})),
    ...state.ideas.map(i => ({...i, _type: 'idea'})),
    ...state.notes.map(n => ({...n, _type: 'note'}))
  ];
  
  return allObjects.find(o => o.id === obj.parentId) || null;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
export function getChildObjects(obj) {
  if (!obj || !obj.children) return { projects: [], tasks: [], ideas: [], notes: [] };
  
  const children = { projects: [], tasks: [], ideas: [], notes: [] };
  
  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
  if (obj.children.projects) {
    children.projects = state.projects.filter(p => obj.children.projects.includes(p.id));
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏
  if (obj.children.tasks) {
    children.tasks = state.tasks.filter(t => obj.children.tasks.includes(t.id));
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–∏
  if (obj.children.ideas) {
    children.ideas = state.ideas.filter(i => obj.children.ideas.includes(i.id));
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –∑–∞–º–µ—Ç–∫–∏
  if (obj.children.notes) {
    children.notes = state.notes.filter(n => obj.children.notes.includes(n.id));
  }
  
  return children;
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤—è–∑–∏ —Ä–æ–¥–∏—Ç–µ–ª—å-—Ä–µ–±–µ–Ω–æ–∫
export function setParentChild(parentId, childId, childType) {
  if (!parentId || !childId || !childType) return false;
  
  // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è
  const parent = findObjectById(parentId);
  if (!parent) return false;
  
  // –ù–∞—Ö–æ–¥–∏–º —Ä–µ–±–µ–Ω–∫–∞
  const child = findObjectById(childId);
  if (!child) return false;
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—è –∏–µ—Ä–∞—Ä—Ö–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  initHierarchyFields(parent, parent._type || 'domain');
  initHierarchyFields(child, childType);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å
  child.parentId = parentId;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–±–µ–Ω–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ –¥–µ—Ç–µ–π —Ä–æ–¥–∏—Ç–µ–ª—è
  const childArrayKey = childType + 's';
  if (!parent.children[childArrayKey]) {
    parent.children[childArrayKey] = [];
  }
  if (!parent.children[childArrayKey].includes(childId)) {
    parent.children[childArrayKey].push(childId);
  }
  
  return true;
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–≤—è–∑–∏ —Ä–æ–¥–∏—Ç–µ–ª—å-—Ä–µ–±–µ–Ω–æ–∫
export function removeParentChild(parentId, childId, childType) {
  if (!parentId || !childId || !childType) return false;
  
  // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—è
  const parent = findObjectById(parentId);
  if (!parent) return false;
  
  // –ù–∞—Ö–æ–¥–∏–º —Ä–µ–±–µ–Ω–∫–∞
  const child = findObjectById(childId);
  if (!child) return false;
  
  // –£–¥–∞–ª—è–µ–º —Å–≤—è–∑—å
  child.parentId = null;
  
  // –£–¥–∞–ª—è–µ–º —Ä–µ–±–µ–Ω–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–µ—Ç–µ–π —Ä–æ–¥–∏—Ç–µ–ª—è
  const childArrayKey = childType + 's';
  if (parent.children && parent.children[childArrayKey]) {
    const index = parent.children[childArrayKey].indexOf(childId);
    if (index > -1) {
      parent.children[childArrayKey].splice(index, 1);
    }
  }
  
  return true;
}

// –ü–æ–∏—Å–∫ –æ–±—ä–µ–∫—Ç–∞ –ø–æ ID –≤–æ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
export function findObjectById(id) {
  if (!id) return null;
  
  // –ò—â–µ–º –≤–æ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
  const allObjects = [
    ...state.domains.map(d => ({...d, _type: 'domain'})),
    ...state.projects.map(p => ({...p, _type: 'project'})),
    ...state.tasks.map(t => ({...t, _type: 'task'})),
    ...state.ideas.map(i => ({...i, _type: 'idea'})),
    ...state.notes.map(n => ({...n, _type: 'note'}))
  ];
  
  return allObjects.find(o => o.id === id) || null;
}

// –°—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏ —É–¥–∞–ª–µ–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–æ–≤—ã–µ –∏–∑ –º–æ–¥—É–ª—è hierarchy/index.js

// ===== –°–ò–°–¢–ï–ú–ê –ò–ï–†–ê–†–•–ò–ò V2 =====
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∫ —Å–∏—Å—Ç–µ–º–µ –∏–µ—Ä–∞—Ä—Ö–∏–∏...');
  
  // –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–æ–º–µ–Ω—ã
  state.domains.forEach(domain => {
    initHierarchyFields(domain, 'domain');
  });
  
  // –ú–∏–≥—Ä–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç—ã
  state.projects.forEach(project => {
    initHierarchyFields(project, 'project');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å —Å –¥–æ–º–µ–Ω–æ–º –µ—Å–ª–∏ –µ—Å—Ç—å
    if (project.domainId) {
      setParentChild(project.domainId, project.id, 'project');
    }
  });
  
  // –ú–∏–≥—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏
  state.tasks.forEach(task => {
    initHierarchyFields(task, 'task');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å —Å –ø—Ä–æ–µ–∫—Ç–æ–º –∏–ª–∏ –¥–æ–º–µ–Ω–æ–º
    if (task.projectId) {
      setParentChild(task.projectId, task.id, 'task');
    } else if (task.domainId) {
      setParentChild(task.domainId, task.id, 'task');
    }
  });
  
  // –ú–∏–≥—Ä–∏—Ä—É–µ–º –∏–¥–µ–∏
  state.ideas.forEach(idea => {
    initHierarchyFields(idea, 'idea');
    
    // –ò–¥–µ–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ, –Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –¥–æ–º–µ–Ω—É
    if (idea.domainId) {
      setParentChild(idea.domainId, idea.id, 'idea');
    }
  });
  
  // –ú–∏–≥—Ä–∏—Ä—É–µ–º –∑–∞–º–µ—Ç–∫–∏
  state.notes.forEach(note => {
    initHierarchyFields(note, 'note');
    
    // –ó–∞–º–µ—Ç–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ, –Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –¥–æ–º–µ–Ω—É
    if (note.domainId) {
      setParentChild(note.domainId, note.id, 'note');
    }
  });
  
  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  let errors = validateHierarchy();
  if (errors.length > 0) {
    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏:', errors.length);
    console.log('üîç –ü–µ—Ä–≤—ã–µ 5 –æ—à–∏–±–æ–∫:', errors.slice(0, 5));
    console.log('üîç –¢–∏–ø—ã –æ—à–∏–±–æ–∫:', [...new Set(errors.map(err => err.type))]);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏
    const fixed = fixHierarchyErrors();
    if (fixed > 0) {
      console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixed} –æ—à–∏–±–æ–∫, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è...`);
      errors = validateHierarchy();
      if (errors.length === 0) {
        console.log('‚úÖ –í—Å–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
      } else {
        console.warn(`‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å ${errors.length} –æ—à–∏–±–æ–∫ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è`);
        console.log('üîç –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–∏–ø—ã –æ—à–∏–±–æ–∫:', [...new Set(errors.map(err => err.type))]);
      }
    }
  } else {
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∫ —Å–∏—Å—Ç–µ–º–µ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
  }
  
  return errors.length === 0;
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
export function fixHierarchyErrors() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏...');
  
  const errors = validateHierarchy();
  let fixed = 0;
  
  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –æ—à–∏–±–æ–∫ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
  const errorsToFix = [...errors];
  
  errorsToFix.forEach(error => {
    switch (error.type) {
      case 'missing_parent':
        // –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
        const obj = findObjectById(error.objectId);
        if (obj) {
          console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º missing_parent: ${error.objectId} -> null`);
          obj.parentId = null;
          fixed++;
        }
        break;
        
      case 'missing_child':
        // –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞
        const parent = findObjectById(error.objectId);
        if (parent && parent.children) {
          Object.keys(parent.children).forEach(childType => {
            const index = parent.children[childType].indexOf(error.childId);
            if (index > -1) {
              console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º missing_child: ${error.objectId} —É–¥–∞–ª—è–µ—Ç ${error.childId} –∏–∑ ${childType}`);
              parent.children[childType].splice(index, 1);
              fixed++;
            }
          });
        }
        break;
        
      case 'mismatched_relation':
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–≤—è–∑–∏
        const child = findObjectById(error.childId);
        if (child) {
          console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º mismatched_relation: ${error.childId} -> ${error.objectId}`);
          child.parentId = error.objectId;
          fixed++;
        }
        break;
    }
  });
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
  if (fixed > 0) {
    try {
      saveState();
      console.log(`üíæ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage`);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', e);
    }
  }
  
  console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixed} –æ—à–∏–±–æ–∫ –∏–µ—Ä–∞—Ä—Ö–∏–∏`);
  return fixed;
}

// –û—á–∏—Å—Ç–∫–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è
export function resetAndMigrateHierarchy() {
  console.log('üîÑ –û—á–∏—â–∞–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é...');
  
  // –û—á–∏—â–∞–µ–º –≤—Å–µ –ø–æ–ª—è –∏–µ—Ä–∞—Ä—Ö–∏–∏
  const allObjects = [
    ...state.domains,
    ...state.projects,
    ...state.tasks,
    ...state.ideas,
    ...state.notes
  ];
  
  allObjects.forEach(obj => {
    delete obj.parentId;
    delete obj.children;
    delete obj.locks;
    delete obj.constraints;
  });
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—á–∏—â–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  try {
    saveState();
    console.log('üíæ –û—á–∏—â–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ');
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', e);
  }
  
  // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ
  return migrateToHierarchy();
}

// –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–∏
export function clearHierarchy() {
  console.log('üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏...');
  
  const allObjects = [
    ...state.domains,
    ...state.projects,
    ...state.tasks,
    ...state.ideas,
    ...state.notes
  ];
  
  allObjects.forEach(obj => {
    delete obj.parentId;
    delete obj.children;
    delete obj.locks;
    delete obj.constraints;
  });
  
  try {
    saveState();
    console.log('‚úÖ –ò–µ—Ä–∞—Ä—Ö–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞');
    return true;
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏:', e);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º–∏
export function isObjectLocked(obj, lockType) {
  if (!obj || !obj.locks) return false;
  return obj.locks[lockType] === true;
}

export function canMoveObject(obj) {
  return !isObjectLocked(obj, 'move');
}

export function canChangeHierarchy(obj) {
  return !isObjectLocked(obj, 'hierarchy');
}

export function getLockedObjects() {
  const allObjects = [
    ...state.domains.map(d => ({...d, _type: 'domain'})),
    ...state.projects.map(p => ({...p, _type: 'project'})),
    ...state.tasks.map(t => ({...t, _type: 'task'})),
    ...state.ideas.map(i => ({...i, _type: 'idea'})),
    ...state.notes.map(n => ({...n, _type: 'note'}))
  ];
  
  return allObjects.filter(obj => 
    isObjectLocked(obj, 'move') || isObjectLocked(obj, 'hierarchy')
  );
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–≤—è–∑–µ–π
export function attachObjectToParent(childId, childType, parentId, parentType) {
  console.log(`üîó Attaching ${childType} ${childId} to ${parentType} ${parentId}`);
  
  // –ù–∞—Ö–æ–¥–∏–º –æ–±—ä–µ–∫—Ç—ã
  const child = findObjectById(childId);
  const parent = findObjectById(parentId);
  
  if (!child || !parent) {
    console.error('‚ùå Object not found:', { childId, parentId });
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  if (!canChangeHierarchy(child) || !canChangeHierarchy(parent)) {
    console.warn('üö´ Hierarchy change blocked by locks');
    return false;
  }
  
  // –û—Ç–≤—è–∑—ã–≤–∞–µ–º –æ—Ç —Å—Ç–∞—Ä–æ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
  if (child.parentId) {
    removeParentChild(child.parentId, childId, childType);
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
  child.parentId = parentId;
  if (parentType === 'domain') {
    child.domainId = parentId;
    child.projectId = null;
  } else if (parentType === 'project') {
    child.projectId = parentId;
    child.domainId = parent.domainId; // –ù–∞—Å–ª–µ–¥—É–µ–º –¥–æ–º–µ–Ω –æ—Ç –ø—Ä–æ–µ–∫—Ç–∞
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –¥–µ—Ç–µ–π —Ä–æ–¥–∏—Ç–µ–ª—è
  setParentChild(parentId, childId, childType);
  
  child.updatedAt = Date.now();
  parent.updatedAt = Date.now();
  
  console.log(`‚úÖ Successfully attached ${childType} ${childId} to ${parentType} ${parentId}`);
  return true;
}

export function detachObjectFromParent(childId, childType) {
  console.log(`üîì Detaching ${childType} ${childId} from parent`);
  
  const child = findObjectById(childId);
  if (!child) {
    console.error('‚ùå Child object not found:', childId);
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  if (!canChangeHierarchy(child)) {
    console.warn('üö´ Hierarchy change blocked by locks');
    return false;
  }
  
  // –û—Ç–≤—è–∑—ã–≤–∞–µ–º –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è
  if (child.parentId) {
    const success = removeParentChild(child.parentId, childId, childType);
    if (!success) {
      console.warn('‚ö†Ô∏è Failed to remove from parent children list');
    }
  }
  
  // –û—á–∏—â–∞–µ–º —Å–≤—è–∑–∏ (removeParentChild —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª parentId = null)
  if (childType === 'task' || childType === 'idea' || childType === 'note') {
    child.projectId = null;
    child.domainId = null;
  } else if (childType === 'project') {
    child.domainId = null;
  }
  
  child.updatedAt = Date.now();
  
  console.log(`‚úÖ Successfully detached ${childType} ${childId}`);
  return true;
}

export function getAvailableParents(childType) {
  const parents = [];
  
  if (childType === 'project') {
    // –ü—Ä–æ–µ–∫—Ç—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å –¥–æ–º–µ–Ω–∞–º
    parents.push(...state.domains.map(d => ({...d, _type: 'domain'})));
  } else if (childType === 'task' || childType === 'idea' || childType === 'note') {
    // –ó–∞–¥–∞—á–∏, –∏–¥–µ–∏, –∑–∞–º–µ—Ç–∫–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç–∞–º –∏ –¥–æ–º–µ–Ω–∞–º
    parents.push(...state.domains.map(d => ({...d, _type: 'domain'})));
    parents.push(...state.projects.map(p => ({...p, _type: 'project'})));
  }
  
  return parents.filter(p => canChangeHierarchy(p));
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–¥–µ—è–º–∏
export function createIdea(title, content = '', domainId = null) {
  const idea = {
    id: generateId(),
    title: title || '–ù–æ–≤–∞—è –∏–¥–µ—è',
    content: content,
    domainId: domainId,
    x: Math.random() * 2000 - 1000,
    y: Math.random() * 2000 - 1000,
    r: 20 + Math.random() * 30, // 20-50px —Ä–∞–¥–∏—É—Å
    color: getRandomIdeaColor(),
    opacity: 0.3 + Math.random() * 0.3, // 0.3-0.6
    createdAt: Date.now(),
    updatedAt: Date.now()
  };
  state.ideas.push(idea);
  return idea;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
export function createNote(title, content = '', domainId = null) {
  const note = {
    id: generateId(),
    title: title || '–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞',
    content: content,
    domainId: domainId,
    x: Math.random() * 2000 - 1000,
    y: Math.random() * 2000 - 1000,
    r: 4 + Math.random() * 8, // 4-12px —Ä–∞–¥–∏—É—Å
    color: getRandomNoteColor(),
    opacity: 1.0,
    createdAt: Date.now(),
    updatedAt: Date.now()
  };
  state.notes.push(note);
  return note;
}

// –¶–≤–µ—Ç–æ–≤—ã–µ –ø–∞–ª–∏—Ç—Ä—ã
export function getRandomIdeaColor() {
  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'];
  return colors[Math.floor(Math.random() * colors.length)];
}

export function getRandomNoteColor() {
  const colors = ['#8b7355', '#a0a0a0', '#6c757d', '#495057', '#343a40'];
  return colors[Math.floor(Math.random() * colors.length)];
}

// ===== –°–ò–°–¢–ï–ú–ê –ò–ï–†–ê–†–•–ò–ò V2 =====

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ ID
 * @param {string} id - ID –æ–±—ä–µ–∫—Ç–∞
 * @returns {Object|null} –û–±—ä–µ–∫—Ç –∏–ª–∏ null
 */
export function findObjectById(id) {
  const allObjects = [
    ...state.domains,
    ...state.projects,
    ...state.tasks,
    ...state.ideas,
    ...state.notes
  ];
  return allObjects.find(obj => obj.id === id) || null;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–∞
 * @param {Object} obj - –û–±—ä–µ–∫—Ç
 * @returns {string} –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞
 */
export function getObjectType(obj) {
  if (obj.title && obj.mood) return 'domain';
  if (obj.title && obj.domainId) return 'project';
  if (obj.title && obj.status) return 'task';
  if (obj.title && obj.content) return 'idea';
  if (obj.title && obj.text) return 'note';
  return 'unknown';
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∏–µ—Ä–∞—Ä—Ö–∏–∏ –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
 */
export function initializeHierarchySystem() {
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∏–µ—Ä–∞—Ä—Ö–∏–∏ v2...');
    
    const result = {
      success: false,
      processedObjects: 0,
      errors: [],
      warnings: []
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—è –∏–µ—Ä–∞—Ä—Ö–∏–∏ –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    const allObjects = [
      ...state.domains,
      ...state.projects,
      ...state.tasks,
      ...state.ideas,
      ...state.notes
    ];

    allObjects.forEach(obj => {
      try {
        const objType = getObjectType(obj);
        initHierarchyFields(obj, objType);
        result.processedObjects++;
      } catch (error) {
        result.errors.push(`–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ${obj.id}: ${error.message}`);
      }
    });

    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é
    const validationErrors = validateHierarchy(state);
    if (validationErrors.length > 0) {
      result.warnings.push(`–ù–∞–π–¥–µ–Ω–æ ${validationErrors.length} –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏`);
    }

    result.success = result.errors.length === 0;
    
    if (result.success) {
      console.log(`‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${result.processedObjects}`);
    } else {
      console.warn(`‚ö†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏. –û—à–∏–±–æ–∫: ${result.errors.length}`);
    }

    return result;

  } catch (error) {
    console.error('‚ùå initializeHierarchySystem: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    return {
      success: false,
      processedObjects: 0,
      errors: [`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`],
      warnings: []
    };
  }
}

/**
 * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
 */
export function restoreHierarchyConnections() {
  try {
    console.log('üîó –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –∏–µ—Ä–∞—Ä—Ö–∏–∏...');
    
    const result = {
      success: false,
      restoredConnections: 0,
      errors: [],
      details: []
    };

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –¥–æ–º–µ–Ω–∞–º–∏
    state.projects.forEach(project => {
      if (project.domainId) {
        try {
          if (setParentChild(project.domainId, project.id, 'project')) {
            result.restoredConnections++;
            result.details.push(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å: ${project.domainId} ‚Üí ${project.id} (project)`);
          }
        } catch (error) {
          result.errors.push(`–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∏ –ø—Ä–æ–µ–∫—Ç–∞ ${project.id}: ${error.message}`);
        }
      }
    });

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑–∏ –∑–∞–¥–∞—á —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏–ª–∏ –¥–æ–º–µ–Ω–∞–º–∏
    state.tasks.forEach(task => {
      if (task.projectId) {
        try {
          if (setParentChild(task.projectId, task.id, 'task')) {
            result.restoredConnections++;
            result.details.push(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å: ${task.projectId} ‚Üí ${task.id} (task)`);
          }
        } catch (error) {
          result.errors.push(`–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∏ –∑–∞–¥–∞—á–∏ ${task.id}: ${error.message}`);
        }
      } else if (task.domainId) {
        try {
          if (setParentChild(task.domainId, task.id, 'task')) {
            result.restoredConnections++;
            result.details.push(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å: ${task.domainId} ‚Üí ${task.id} (task)`);
          }
        } catch (error) {
          result.errors.push(`–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∏ –∑–∞–¥–∞—á–∏ ${task.id}: ${error.message}`);
        }
      }
    });

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑–∏ –∏–¥–µ–π —Å –¥–æ–º–µ–Ω–∞–º–∏
    state.ideas.forEach(idea => {
      if (idea.domainId) {
        try {
          if (setParentChild(idea.domainId, idea.id, 'idea')) {
            result.restoredConnections++;
            result.details.push(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å: ${idea.domainId} ‚Üí ${idea.id} (idea)`);
          }
        } catch (error) {
          result.errors.push(`–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∏ –∏–¥–µ–∏ ${idea.id}: ${error.message}`);
        }
      }
    });

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑–∏ –∑–∞–º–µ—Ç–æ–∫ —Å –¥–æ–º–µ–Ω–∞–º–∏
    state.notes.forEach(note => {
      if (note.domainId) {
        try {
          if (setParentChild(note.domainId, note.id, 'note')) {
            result.restoredConnections++;
            result.details.push(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å: ${note.domainId} ‚Üí ${note.id} (note)`);
          }
        } catch (error) {
          result.errors.push(`–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∏ –∑–∞–º–µ—Ç–∫–∏ ${note.id}: ${error.message}`);
        }
      }
    });

    result.success = result.errors.length === 0;
    
    if (result.success) {
      console.log(`‚úÖ –°–≤—è–∑–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–≤—è–∑–µ–π: ${result.restoredConnections}`);
    } else {
      console.warn(`‚ö†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏. –û—à–∏–±–æ–∫: ${result.errors.length}`);
    }

    return result;

  } catch (error) {
    console.error('‚ùå restoreHierarchyConnections: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
    return {
      success: false,
      restoredConnections: 0,
      errors: [`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`],
      details: []
    };
  }
}

/**
 * –ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –∫ —Å–∏—Å—Ç–µ–º–µ –∏–µ—Ä–∞—Ä—Ö–∏–∏ v2
 * @param {Object} options - –û–ø—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
 */
export function migrateToHierarchyV2(options = {}) {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é –∫ —Å–∏—Å—Ç–µ–º–µ –∏–µ—Ä–∞—Ä—Ö–∏–∏ v2...');
    
    const result = {
      success: false,
      steps: [],
      errors: [],
      warnings: []
    };

    // –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
    console.log('üìã –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...');
    const initResult = initializeHierarchySystem();
    result.steps.push({
      step: 1,
      name: '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã',
      success: initResult.success,
      details: initResult
    });

    if (!initResult.success) {
      result.errors.push(...initResult.errors);
      return result;
    }

    // –®–∞–≥ 2: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π
    console.log('üîó –®–∞–≥ 2: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π...');
    const restoreResult = restoreHierarchyConnections();
    result.steps.push({
      step: 2,
      name: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π',
      success: restoreResult.success,
      details: restoreResult
    });

    if (!restoreResult.success) {
      result.warnings.push(...restoreResult.errors);
    }

    // –®–∞–≥ 3: –í–∞–ª–∏–¥–∞—Ü–∏—è
    console.log('üîç –®–∞–≥ 3: –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–µ—Ä–∞—Ä—Ö–∏–∏...');
    const validationErrors = validateHierarchy(state);
    result.steps.push({
      step: 3,
      name: '–í–∞–ª–∏–¥–∞—Ü–∏—è –∏–µ—Ä–∞—Ä—Ö–∏–∏',
      success: validationErrors.length === 0,
      details: { errors: validationErrors }
    });

    if (validationErrors.length > 0) {
      result.warnings.push(`–ù–∞–π–¥–µ–Ω–æ ${validationErrors.length} –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏`);
    }

    // –®–∞–≥ 4: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    console.log('üíæ –®–∞–≥ 4: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è...');
    try {
      saveState();
      result.steps.push({
        step: 4,
        name: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è',
        success: true,
        details: { message: '–°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ' }
      });
    } catch (error) {
      result.errors.push(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`);
      result.steps.push({
        step: 4,
        name: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è',
        success: false,
        details: { error: error.message }
      });
    }

    result.success = result.errors.length === 0;
    
    if (result.success) {
      console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    } else {
      console.warn(`‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏. –û—à–∏–±–æ–∫: ${result.errors.length}`);
    }

    return result;

  } catch (error) {
    console.error('‚ùå migrateToHierarchyV2: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    return {
      success: false,
      steps: [],
      errors: [`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`],
      warnings: []
    };
  }
}

/**
 * –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–∫–∞—Ç–∞
 */
export function rollbackHierarchyMigration() {
  try {
    console.log('‚è™ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏...');
    
    const result = {
      success: false,
      clearedObjects: 0,
      errors: [],
      details: []
    };

    const allObjects = [
      ...state.domains,
      ...state.projects,
      ...state.tasks,
      ...state.ideas,
      ...state.notes
    ];

    allObjects.forEach(obj => {
      try {
        let cleared = false;
        
        // –£–¥–∞–ª—è–µ–º –ø–æ–ª—è –∏–µ—Ä–∞—Ä—Ö–∏–∏
        if (obj.parentId) {
          obj.parentId = null;
          cleared = true;
        }
        
        if (obj.children) {
          obj.children = {
            projects: [],
            tasks: [],
            ideas: [],
            notes: []
          };
          cleared = true;
        }
        
        if (obj.locks) {
          delete obj.locks;
          cleared = true;
        }
        
        if (obj.constraints) {
          delete obj.constraints;
          cleared = true;
        }

        if (cleared) {
          result.clearedObjects++;
          result.details.push(`–û—á–∏—â–µ–Ω –æ–±—ä–µ–∫—Ç: ${obj.id}`);
        }

      } catch (error) {
        result.errors.push(`–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ ${obj.id}: ${error.message}`);
      }
    });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—á–∏—â–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    try {
      saveState();
      result.details.push('–û—á–∏—â–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ');
    } catch (error) {
      result.errors.push(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`);
    }

    result.success = result.errors.length === 0;
    
    if (result.success) {
      console.log(`‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –û—á–∏—â–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${result.clearedObjects}`);
    } else {
      console.warn(`‚ö†Ô∏è –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏. –û—à–∏–±–æ–∫: ${result.errors.length}`);
    }

    return result;

  } catch (error) {
    console.error('‚ùå rollbackHierarchyMigration: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞:', error);
    return {
      success: false,
      clearedObjects: 0,
      errors: [`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`],
      details: []
    };
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏
 * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏
 */
export function getHierarchyStatistics() {
  try {
    const allObjects = [
      ...state.domains,
      ...state.projects,
      ...state.tasks,
      ...state.ideas,
      ...state.notes
    ];

    const stats = {
      total: allObjects.length,
      withParent: 0,
      withoutParent: 0,
      totalConnections: 0,
      byType: {
        domains: { total: 0, withParent: 0, children: 0 },
        projects: { total: 0, withParent: 0, children: 0 },
        tasks: { total: 0, withParent: 0, children: 0 },
        ideas: { total: 0, withParent: 0, children: 0 },
        notes: { total: 0, withParent: 0, children: 0 }
      }
    };

    allObjects.forEach(obj => {
      const objType = getObjectType(obj);
      const typeKey = objType + 's';
      
      if (stats.byType[typeKey]) {
        stats.byType[typeKey].total++;
        
        if (obj.parentId) {
          stats.withParent++;
          stats.byType[typeKey].withParent++;
        } else {
          stats.withoutParent++;
        }

        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–µ—Ç–µ–π
        if (obj.children) {
          const childrenCount = Object.values(obj.children).reduce((sum, arr) => sum + arr.length, 0);
          stats.totalConnections += childrenCount;
          stats.byType[typeKey].children += childrenCount;
        }
      }
    });

    return stats;

  } catch (error) {
    console.error('‚ùå getHierarchyStatistics: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    return {
      total: 0,
      withParent: 0,
      withoutParent: 0,
      totalConnections: 0,
      byType: {}
    };
  }
}
